”
eF:\APIÂºÄÂèëÔºàRomensÈõ®‰∫∫Ôºâ\LearnWay\HongFireSimple\HangFireWebSimple\Config\ApplicationPreload.cs
	namespace 	
HangFireWebSimple
 
. 
Config "
{ 
public 

class 
ApplicationPreload #
:$ %
System& ,
., -
Web- 0
.0 1
Hosting1 8
.8 9%
IProcessHostPreloadClient9 R
{ 
void %
IProcessHostPreloadClient &
.& '
Preload' .
(. /
string/ 5
[5 6
]6 7

parameters8 B
)B C
{ 	 
HangfireBootstrapper  
.  !
Instance! )
.) *
Start* /
(/ 0
)0 1
;1 2
} 	
} 
} ı
gF:\APIÂºÄÂèëÔºàRomensÈõ®‰∫∫Ôºâ\LearnWay\HongFireSimple\HangFireWebSimple\Config\HangfireBootstrapper.cs
	namespace 	
HangFireWebSimple
 
. 
Config "
{ 
public 

class  
HangfireBootstrapper %
:& '
IRegisteredObject( 9
{ 
public 
static 
readonly  
HangfireBootstrapper 3
Instance4 <
== >
new? B 
HangfireBootstrapperC W
(W X
)X Y
;Y Z
private 
readonly 
object 
_lockObject  +
=, -
new. 1
object2 8
(8 9
)9 :
;: ;
private 
bool 
_started 
; 
private 
BackgroundJobServer # 
_backgroundJobServer$ 8
;8 9
private  
HangfireBootstrapper $
($ %
)% &
{ 	
} 	
public   
void   
Start   
(   
)   
{!! 	
lock"" 
("" 
_lockObject"" 
)"" 
{## 
if$$ 
($$ 
_started$$ 
)$$ 
return$$ $
;$$$ %
_started%% 
=%% 
true%% 
;%%  
HostingEnvironment'' "
.''" #
RegisterObject''# 1
(''1 2
this''2 6
)''6 7
;''7 8
GlobalConfiguration)) #
.))# $
Configuration))$ 1
.** 
UseSqlServerStorage** (
(**( )
$str	**) §
)
**§ •
;
**• ¶ 
_backgroundJobServer-- $
=--% &
new--' *
BackgroundJobServer--+ >
(--> ?
)--? @
;--@ A
}.. 
}// 	
public00 
void00 
Stop00 
(00 
)00 
{11 	
lock22 
(22 
_lockObject22 
)22 
{33 
if44 
(44  
_backgroundJobServer44 (
!=44) +
null44, 0
)440 1
{55  
_backgroundJobServer66 (
.66( )
Dispose66) 0
(660 1
)661 2
;662 3
}77 
HostingEnvironment99 "
.99" #
UnregisterObject99# 3
(993 4
this994 8
)998 9
;999 :
}:: 
};; 	
void<< 
IRegisteredObject<< 
.<< 
Stop<< #
(<<# $
bool<<$ (
	immediate<<) 2
)<<2 3
{== 	
Stop>> 
(>> 
)>> 
;>> 
}?? 	
}@@ 
}AA ◊"
UF:\APIÂºÄÂèëÔºàRomensÈõ®‰∫∫Ôºâ\LearnWay\HongFireSimple\HangFireWebSimple\Demo.aspx.cs
	namespace 	
HangFireWebSimple
 
{ 
public 

partial 
class 
Demo 
: 
System  &
.& '
Web' *
.* +
UI+ -
.- .
Page. 2
{ 
	protected 
void 
	Page_Load  
(  !
object! '
sender( .
,. /
	EventArgs0 9
e: ;
); <
{ 	
} 	
	protected 
void 
Button1_Click $
($ %
object% +
sender, 2
,2 3
	EventArgs4 =
e> ?
)? @
{ 	
byte 
[ 
] 
gbyte 
= 
Encoding #
.# $
GetEncoding$ /
(/ 0
$str0 8
)8 9
.9 :
GetBytes: B
(B C
$strC P
)P Q
;Q R
string 
	base64Str 
= 
Convert &
.& '
ToBase64String' 5
(5 6
gbyte6 ;
); <
;< =
string 
[ 
] 
Demos 
= 
{ 
$str "
," #
$str$ '
,' (
$str) ,
,, -
$str. 1
}2 3
;3 4
Array   
.   
Sort   
(   
Demos   
,   
string   $
.  $ %
CompareOrdinal  % 3
)  3 4
;  4 5
string!! 
[!! 
]!! 
result3!! 
=!! 
Demos!! $
;!!$ %
string## 
aa## 
=## 
$str## !
;##! "
return%% 
;%% 
int** 
mathNum** 
=** 
$num** 
;** 
int++ 
result++ 
=++ 
(++ 
int++ 
)++ 
AssemblyHelper++ ,
.++, -
DLLFuncWithParam++- =
(++= >
out++> A
string++B H
expInfo++I P
,++P Q
$str	++R ó
,
++ó ò
$str
++ô ü
,
++ü †
$str
++° ß
,
++ß ®
$str
++© Æ
,
++Æ Ø
new
++∞ ≥
Type
++¥ ∏
[
++∏ π
]
++π ∫
{
++ª º
Type
++º ¿
.
++¿ ¡
GetType
++¡ »
(
++» …
$str
++… ◊
)
++◊ ÿ
}
++ÿ Ÿ
,
++Ÿ ⁄
mathNum
++€ ‚
)
++‚ „
;
++„ ‰
int,, 
result1,, 
=,, 
(,, 
int,, 
),, 
AssemblyHelper,, -
.,,- .
DLLFunc,,. 5
(,,5 6
out,,6 9
string,,: @
error,,A F
,,,F G
$str	,,H ç
,
,,ç é
$str
,,è ï
,
,,ï ñ
$str
,,ó ù
,
,,ù û
$str
,,ü ß
)
,,ß ®
;
,,® ©
AssemblyHelper-- 
.-- 
	DLLAction-- $
(--$ %
out--% (
string--) /
e2--0 2
,--2 3
$str--4 y
,--y z
$str	--{ Å
,
--Å Ç
$str
--É â
,
--â ä
$str
--ã ò
)
--ò ô
;
--ô ö
int.. 
[.. 
].. 
ints.. 
;.. 
TaskLog00 
taskLog00 
=00 
new00 !
TaskLog00" )
(00) *
)00* +
;00+ ,
Task11 
t11 
=11 
new11 
Task11 
(11 
(11 
)11  
=>11! #
{11$ %
taskLog22 
.22 
DebugLog22  
(22  !
)22! "
;22" #
}33 
)33 
;33 
RecurringJob55 
.55 
AddOrUpdate55 $
(55$ %
$str55% 7
,557 8
(558 9
)559 :
=>55; =
taskLog55> E
.55E F
DebugLog55F N
(55N O
)55O P
,55P Q
Cron55Q U
.55U V
MinuteInterval55V d
(55d e
$num55e f
)55f g
)55g h
;55h i
}77 	
}88 
}99 ⁄
WF:\APIÂºÄÂèëÔºàRomensÈõ®‰∫∫Ôºâ\LearnWay\HongFireSimple\HangFireWebSimple\Global.asax.cs
	namespace

 	
HangFireWebSimple


 
{ 
public 

class 
Global 
: 
System  
.  !
Web! $
.$ %
HttpApplication% 4
{ 
	protected 
void 
Application_Start (
(( )
object) /
sender0 6
,6 7
	EventArgs8 A
eB C
)C D
{ 	 
HangfireBootstrapper  
.  !
Instance! )
.) *
Start* /
(/ 0
)0 1
;1 2
} 	
	protected 
void 
Application_End &
(& '
object' -
sender. 4
,4 5
	EventArgs6 ?
e@ A
)A B
{ 	 
HangfireBootstrapper  
.  !
Instance! )
.) *
Stop* .
(. /
)/ 0
;0 1
} 	
} 
} Ω3
aF:\APIÂºÄÂèëÔºàRomensÈõ®‰∫∫Ôºâ\LearnWay\HongFireSimple\HangFireWebSimple\Helper\AssemblyHelper.cs
	namespace 	
HangFireWebSimple
 
. 
Helper "
{ 
public 

static 
class 
AssemblyHelper &
{ 
public 
static 
void 
	DLLAction $
($ %
out% (
string) /
errMsg0 6
,6 7
string7 =
dLLPath> E
,E F
stringF L
nameSpaceNameM Z
,Z [
string[ a
	classNameb k
,k l
stringl r

methodNames }
)} ~
{ 	
try 
{ 
Assembly 
assembly !
=" #
Assembly$ ,
., -
LoadFile- 5
(5 6
dLLPath6 =
)= >
;> ?
Type 
type 
= 
assembly $
.$ %
GetType% ,
(, -
$"- /
{/ 0
nameSpaceName0 =
}= >
.> ?
{? @
	className@ I
}I J
"J K
)K L
;L M
object   
instance   
=    !
assembly  " *
.  * +
CreateInstance  + 9
(  9 :
$"  : <
{  < =
nameSpaceName  = J
}  J K
.  K L
{  L M
	className  M V
}  V W
"  W X
)  X Y
;  Y Z
object"" 
value"" 
="" 
type"" #
.""# $
	GetMethod""$ -
(""- .

methodName"". 8
)""8 9
.""9 :
Invoke"": @
(""@ A
instance""A I
,""I J
null""K O
)""O P
;""P Q
errMsg## 
=## 
$str## 
;## 
}$$ 
catch%% 
(%% 
	Exception%% 
err%%  
)%%  !
{&& 
errMsg'' 
='' 
err'' 
.'' 
Message'' $
;''$ %
}(( 
}** 	
public55 
static55 
object55 
DLLFunc55 $
(55$ %
out55% (
string55) /
errMsg550 6
,556 7
string557 =
dLLPath55> E
,55E F
string55G M
nameSpaceName55N [
,55[ \
string55] c
	className55d m
,55m n
string55n t

methodName55u 
)	55 Ä
{66 	
try77 
{88 
Assembly:: 
assembly:: !
=::" #
Assembly::$ ,
.::, -
LoadFile::- 5
(::5 6
dLLPath::6 =
)::= >
;::> ?
Type<< 
type<< 
=<< 
assembly<< $
.<<$ %
GetType<<% ,
(<<, -
$"<<- /
{<</ 0
nameSpaceName<<0 =
}<<= >
.<<> ?
{<<? @
	className<<@ I
}<<I J
"<<J K
)<<K L
;<<L M
object>> 
instance>> 
=>>  !
assembly>>" *
.>>* +
CreateInstance>>+ 9
(>>9 :
$">>: <
{>>< =
nameSpaceName>>= J
}>>J K
.>>K L
{>>L M
	className>>M V
}>>V W
">>W X
)>>X Y
;>>Y Z
object@@ 
value@@ 
=@@ 
type@@ #
.@@# $
	GetMethod@@$ -
(@@- .

methodName@@. 8
,@@8 9
new@@9 <
Type@@= A
[@@A B
]@@B C
{@@D E
}@@F G
)@@G H
.@@H I
Invoke@@I O
(@@O P
instance@@P X
,@@X Y
null@@Z ^
)@@^ _
;@@_ `
errMsgAA 
=AA 
$strAA 
;AA 
returnBB 
valueBB 
;BB 
}DD 
catchEE 
(EE 
	ExceptionEE 
errEE  
)EE  !
{FF 
errMsgGG 
=GG 
errGG 
.GG 
MessageGG $
;GG$ %
returnHH 
nullHH 
;HH 
}II 
}KK 	
publicXX 
staticXX 
objectXX 
DLLFuncWithParamXX -
(XX- .
outXX. 1
stringXX2 8
errMsgXX9 ?
,XX? @
stringXX@ F
dLLPathXXG N
,XXN O
stringXXP V
nameSpaceNameXXW d
,XXd e
stringXXf l
	classNameXXm v
,XXv w
stringXXw }

methodName	XX~ à
,
XXà â
Type
XXâ ç
[
XXç é
]
XXé è
	paramType
XXê ô
,
XXô ö
params
XXõ °
object
XX¢ ®
[
XX® ©
]
XX© ™
methodParams
XX´ ∑
)
XX∑ ∏
{YY 	
tryZZ 
{[[ 
Assembly]] 
assembly]] !
=]]" #
Assembly]]$ ,
.]], -
LoadFile]]- 5
(]]5 6
dLLPath]]6 =
)]]= >
;]]> ?
Type__ 
type__ 
=__ 
assembly__ $
.__$ %
GetType__% ,
(__, -
$"__- /
{__/ 0
nameSpaceName__0 =
}__= >
.__> ?
{__? @
	className__@ I
}__I J
"__J K
)__K L
;__L M
objectaa 
instanceaa 
=aa  !
assemblyaa" *
.aa* +
CreateInstanceaa+ 9
(aa9 :
$"aa: <
{aa< =
nameSpaceNameaa= J
}aaJ K
.aaK L
{aaL M
	classNameaaM V
}aaV W
"aaW X
)aaX Y
;aaY Z
objectcc 
valuecc 
=cc 
typecc #
.cc# $
	GetMethodcc$ -
(cc- .

methodNamecc. 8
,cc8 9
	paramTypecc: C
)ccC D
.ccD E
InvokeccE K
(ccK L
instanceccL T
,ccT U
methodParamsccV b
)ccb c
;ccc d
errMsgdd 
=dd 
$strdd 
;dd 
returnee 
valueee 
;ee 
}ff 
catchgg 
(gg 
	Exceptiongg 
errgg  
)gg  !
{hh 
errMsgii 
=ii 
errii 
.ii 
Messageii $
;ii$ %
returnjj 
nulljj 
;jj 
}kk 
}mm 	
}nn 
}oo é
cF:\APIÂºÄÂèëÔºàRomensÈõ®‰∫∫Ôºâ\LearnWay\HongFireSimple\HangFireWebSimple\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str ,
), -
]- .
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str .
). /
]/ 0
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
["" 
assembly"" 	
:""	 

AssemblyVersion"" 
("" 
$str"" $
)""$ %
]""% &
[## 
assembly## 	
:##	 

AssemblyFileVersion## 
(## 
$str## (
)##( )
]##) *«
SF:\APIÂºÄÂèëÔºàRomensÈõ®‰∫∫Ôºâ\LearnWay\HongFireSimple\HangFireWebSimple\Startup.cs
[		 
assembly		 	
:			 

OwinStartup		 
(		 
typeof		 
(		 
HangFireWebSimple		 /
.		/ 0
Startup		0 7
)		7 8
)		8 9
]		9 :
	namespace 	
HangFireWebSimple
 
{ 
public 

class 
Startup 
{ 
public 
void 
Configuration !
(! "
IAppBuilder" -
app. 1
)1 2
{ 	
GlobalConfiguration 
.  
Configuration  -
.- .
UseSqlServerStorage. A
(A B
$str	B Ω
)
Ω æ
;
æ ø
var 
filter 
= 
new (
BasicAuthAuthorizationFilter 9
(9 :
new /
#BasicAuthAuthorizationFilterOptions 5
{ 
SslRedirect 
= 
false  %
,% &

RequireSsl 
= 
false $
,$ %
LoginCaseSensitive $
=% &
false' ,
,, -
Users 
= 
new 
[ 
] 
{ 
new &
BasicAuthAuthorizationUser 6
{!! 
Login## !
=##" #
$str##$ (
,##( )
PasswordClear$$ )
=$$* +
$str$$, 5
}%% 
,%% 
new'' &
BasicAuthAuthorizationUser'' 6
{(( 
Login** !
=**" #
$str**$ /
,**/ 0
PasswordClear++ )
=++* +
$str++, 4
},, 
,,, 
new.. &
BasicAuthAuthorizationUser.. 6
{// 
Login00 !
=00" #
$str00$ /
,00/ 0
PasswordClear11 )
=11* +
$str11, 4
}22 
,22 
}33 
}44 
)44 
;44 
app66 
.66  
UseHangfireDashboard66 $
(66$ %
$str66% 9
,669 :
new66: =
DashboardOptions66> N
(66N O
)66O P
{66Q R 
AuthorizationFilters66S g
=66h i
new66j m
[66m n
]66n o
{66p q
filter66r x
}66y z
}66{ |
)66| }
;66} ~
app77 
.77 
UseHangfireServer77 !
(77! "
)77" #
;77# $
}99 	
}:: 
};; ‡
]F:\APIÂºÄÂèëÔºàRomensÈõ®‰∫∫Ôºâ\LearnWay\HongFireSimple\HangFireWebSimple\TaskGroup\TaskLog.cs
	namespace 	
HangFireWebSimple
 
. 
	TaskGroup %
{		 
public

 

class

 
TaskLog

 
{ 
Logger 
nlog 
= 

LogManager  
.  !!
GetCurrentClassLogger! 6
(6 7
)7 8
;8 9
public 
void 
DebugLog 
( 
) 
{ 	
nlog 
. 
Debug 
( 
$" 
	Áî®Êà∑Ôºö 
{ 
Environment (
.( )
UserName) 1
}1 2
:is a big men!2 @
"@ A
)A B
;B C
} 	
} 
} 